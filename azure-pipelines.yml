# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

variables:
  solution: '**/VisioPanelAddin.2017.sln'
  Version: '1.2.2'

name: $(Version).$(DayOfYear)$(Rev:r)

stages:
- stage: Build
  pool:
    vmImage: 'windows-latest'

  jobs:
  - job: Build
    steps:
    - task: NuGetToolInstaller@1
  
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: "Build WixExtension Data"
      inputs:
        solution: '$(solution)'
        platform: 'x86'
        configuration: 'Release_WixExtension'

    - task: VSBuild@1
      displayName: "Build Release"
      inputs:
        solution: '$(solution)'
        platform: 'x86'
        configuration: 'Release'

    - task: CopyFiles@2
      inputs:
        sourceFolder: 'VSIX/bin/Release.2017'
        contents: '*.vsix'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
  
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: setup
  
  
- stage: Deploy
  pool:
    vmImage: 'vs2017-win2016'

  jobs:
  - job: Deploy
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'setup'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $versionFull = "$(Build.BuildNumber)"
          $version = $versionFull|%{[System.Version]$_}
          $versionShort = "$($version.Major).$($version.Minor).$($version.Build)"
          Write-Host "##vso[task.setvariable variable=versionShort]$($versionShort)"

    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'github.com_nbelyh'
        repositoryName: '$(Build.Repository.Name)'
        action: 'edit'
        target: '$(Build.SourceVersion)'
        tag: '$(versionShort)'
        title: '$(Build.BuildNumber)'
        releaseNotesSource: 'inline'
        releaseNotesInline: 'TBD'
        assets: '$(System.ArtifactsDirectory)\setup\*'
        isPreRelease: true
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'
